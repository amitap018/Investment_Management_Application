// <auto-generated />
using System;
using Login.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Login.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Login.Models.Authentication", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Authentications");
                });

            modelBuilder.Entity("Login.Models.Feedback", b =>
                {
                    b.Property<long>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FeedbackId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("FeedbackId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Login.Models.Grievance", b =>
                {
                    b.Property<long>("GrievanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("GrievanceId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("GrievanceId");

                    b.HasIndex("UserId");

                    b.ToTable("Grievances");
                });

            modelBuilder.Entity("Login.Models.MutualFund", b =>
                {
                    b.Property<long>("FundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FundId"));

                    b.Property<string>("AssetClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Aum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExitLoad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ExitLoadPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpenseRatio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FundName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FundType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MinimumInvestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nav")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReturnPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RiskCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FundId");

                    b.ToTable("MutualFunds");
                });

            modelBuilder.Entity("Login.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OrderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("FolioNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("FundId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsSip")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Units")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("OrderId");

                    b.HasIndex("FolioNumber");

                    b.HasIndex("FundId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Login.Models.Otp", b =>
                {
                    b.Property<long>("OtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("OtpId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.HasKey("OtpId");

                    b.HasIndex("Email");

                    b.ToTable("Otps");
                });

            modelBuilder.Entity("Login.Models.SIP", b =>
                {
                    b.Property<long>("SipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SipId"));

                    b.Property<long>("FolioNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FundId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("InstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SipAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("SipId");

                    b.HasIndex("FolioNumber");

                    b.HasIndex("FundId");

                    b.HasIndex("UserId");

                    b.ToTable("SIPs");
                });

            modelBuilder.Entity("Login.Models.UserDetails", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("AadhaarNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DematId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IfscCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("Login.Models.UserFund", b =>
                {
                    b.Property<long>("FolioNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("FolioNumber"));

                    b.Property<decimal>("Commission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExpenseAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("FundId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("InvestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OneDayChange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PAndL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Taxes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Units")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("FolioNumber");

                    b.HasIndex("FundId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFunds");
                });

            modelBuilder.Entity("Login.Models.Feedback", b =>
                {
                    b.HasOne("Login.Models.UserDetails", "UserDetails")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("Login.Models.Grievance", b =>
                {
                    b.HasOne("Login.Models.UserDetails", "UserDetails")
                        .WithMany("Grievances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("Login.Models.Order", b =>
                {
                    b.HasOne("Login.Models.UserFund", "UserFund")
                        .WithMany("Orders")
                        .HasForeignKey("FolioNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Login.Models.MutualFund", "MutualFund")
                        .WithMany("Orders")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Login.Models.UserDetails", "UserDetails")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MutualFund");

                    b.Navigation("UserDetails");

                    b.Navigation("UserFund");
                });

            modelBuilder.Entity("Login.Models.SIP", b =>
                {
                    b.HasOne("Login.Models.UserFund", "UserFund")
                        .WithMany()
                        .HasForeignKey("FolioNumber")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Login.Models.MutualFund", "MutualFund")
                        .WithMany("SIPs")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Login.Models.UserDetails", "UserDetails")
                        .WithMany("SIPs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MutualFund");

                    b.Navigation("UserDetails");

                    b.Navigation("UserFund");
                });

            modelBuilder.Entity("Login.Models.UserFund", b =>
                {
                    b.HasOne("Login.Models.MutualFund", "MutualFund")
                        .WithMany("UserFunds")
                        .HasForeignKey("FundId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Login.Models.UserDetails", "UserDetails")
                        .WithMany("UserFunds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MutualFund");

                    b.Navigation("UserDetails");
                });

            modelBuilder.Entity("Login.Models.MutualFund", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SIPs");

                    b.Navigation("UserFunds");
                });

            modelBuilder.Entity("Login.Models.UserDetails", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("Grievances");

                    b.Navigation("Orders");

                    b.Navigation("SIPs");

                    b.Navigation("UserFunds");
                });

            modelBuilder.Entity("Login.Models.UserFund", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
